{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\simko\\\\Downloads\\\\ZpRopim4\\\\ZpetnaVazbaFinal\\\\client\\\\src\\\\contexts\\\\AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useReducer, useEffect } from 'react';\nimport api from '../services/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nconst initialState = {\n  user: null,\n  token: null,\n  isLoading: true,\n  isAuthenticated: false,\n  pendingConfirmation: null // New state for pending email confirmation\n};\nconst authReducer = (state, action) => {\n  switch (action.type) {\n    case 'LOGIN_START':\n      return {\n        ...state,\n        isLoading: true\n      };\n    case 'LOGIN_REQUIRES_CONFIRMATION':\n      return {\n        ...state,\n        isLoading: false,\n        pendingConfirmation: action.payload\n      };\n    case 'LOGIN_SUCCESS':\n      if (typeof window !== 'undefined') {\n        localStorage.setItem('token', action.payload.token);\n      }\n      return {\n        ...state,\n        user: action.payload.user,\n        token: action.payload.token,\n        isAuthenticated: true,\n        isLoading: false,\n        pendingConfirmation: null\n      };\n    case 'LOGIN_FAILURE':\n      if (typeof window !== 'undefined') {\n        localStorage.removeItem('token');\n      }\n      return {\n        ...state,\n        user: null,\n        token: null,\n        isAuthenticated: false,\n        isLoading: false,\n        pendingConfirmation: null\n      };\n    case 'CONFIRMATION_START':\n      return {\n        ...state,\n        isLoading: true\n      };\n    case 'CONFIRMATION_SUCCESS':\n      if (typeof window !== 'undefined') {\n        localStorage.setItem('token', action.payload.token);\n      }\n      return {\n        ...state,\n        user: action.payload.user,\n        token: action.payload.token,\n        isAuthenticated: true,\n        isLoading: false,\n        pendingConfirmation: null\n      };\n    case 'CONFIRMATION_FAILURE':\n      return {\n        ...state,\n        isLoading: false\n        // Keep pendingConfirmation state so user can try again\n      };\n    case 'LOGOUT':\n      if (typeof window !== 'undefined') {\n        localStorage.removeItem('token');\n      }\n      return {\n        ...state,\n        user: null,\n        token: null,\n        isAuthenticated: false,\n        isLoading: false,\n        pendingConfirmation: null\n      };\n    case 'SET_USER':\n      return {\n        ...state,\n        user: action.payload,\n        isAuthenticated: true,\n        isLoading: false\n      };\n    case 'SET_LOADING':\n      return {\n        ...state,\n        isLoading: action.payload\n      };\n    case 'CLEAR_PENDING_CONFIRMATION':\n      return {\n        ...state,\n        pendingConfirmation: null\n      };\n    default:\n      return state;\n  }\n};\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [state, dispatch] = useReducer(authReducer, initialState);\n\n  // Check if user is authenticated on app load\n  useEffect(() => {\n    const checkAuth = async () => {\n      // Safely check for localStorage\n      if (typeof window === 'undefined') {\n        dispatch({\n          type: 'SET_LOADING',\n          payload: false\n        });\n        return;\n      }\n      const token = localStorage.getItem('token');\n      if (!token) {\n        dispatch({\n          type: 'SET_LOADING',\n          payload: false\n        });\n        return;\n      }\n      try {\n        const response = await api.get('/auth/me');\n        dispatch({\n          type: 'SET_USER',\n          payload: response.data\n        });\n      } catch (error) {\n        console.error('Auth check failed:', error);\n        dispatch({\n          type: 'LOGIN_FAILURE'\n        });\n      }\n    };\n    checkAuth();\n  }, []);\n  const login = async credentials => {\n    dispatch({\n      type: 'LOGIN_START'\n    });\n    try {\n      const response = await api.post('/auth/login', credentials);\n      if (response.data.requiresConfirmation) {\n        dispatch({\n          type: 'LOGIN_REQUIRES_CONFIRMATION',\n          payload: {\n            userId: response.data.userId,\n            email: response.data.email,\n            message: response.data.message\n          }\n        });\n        return {\n          success: true,\n          requiresConfirmation: true\n        };\n      } else {\n        dispatch({\n          type: 'LOGIN_SUCCESS',\n          payload: {\n            user: response.data.user,\n            token: response.data.token\n          }\n        });\n        return {\n          success: true\n        };\n      }\n    } catch (error) {\n      var _error$response, _error$response$data;\n      dispatch({\n        type: 'LOGIN_FAILURE'\n      });\n      return {\n        success: false,\n        error: ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.error) || 'Login failed'\n      };\n    }\n  };\n  const confirmEmail = async confirmationCode => {\n    if (!state.pendingConfirmation) {\n      return {\n        success: false,\n        error: 'No pending confirmation'\n      };\n    }\n    dispatch({\n      type: 'CONFIRMATION_START'\n    });\n    try {\n      const response = await api.post('/auth/confirm-email', {\n        userId: state.pendingConfirmation.userId,\n        confirmationCode: confirmationCode\n      });\n      dispatch({\n        type: 'CONFIRMATION_SUCCESS',\n        payload: {\n          user: response.data.user,\n          token: response.data.token\n        }\n      });\n      return {\n        success: true\n      };\n    } catch (error) {\n      var _error$response2, _error$response2$data;\n      dispatch({\n        type: 'CONFIRMATION_FAILURE'\n      });\n      return {\n        success: false,\n        error: ((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.error) || 'Confirmation failed'\n      };\n    }\n  };\n  const resendConfirmation = async () => {\n    if (!state.pendingConfirmation) {\n      return {\n        success: false,\n        error: 'No pending confirmation'\n      };\n    }\n    try {\n      await api.post('/auth/resend-confirmation', {\n        userId: state.pendingConfirmation.userId\n      });\n      return {\n        success: true,\n        message: 'Confirmation email sent successfully'\n      };\n    } catch (error) {\n      var _error$response3, _error$response3$data;\n      return {\n        success: false,\n        error: ((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : (_error$response3$data = _error$response3.data) === null || _error$response3$data === void 0 ? void 0 : _error$response3$data.error) || 'Failed to resend confirmation email'\n      };\n    }\n  };\n  const cancelConfirmation = () => {\n    dispatch({\n      type: 'CLEAR_PENDING_CONFIRMATION'\n    });\n  };\n  const logout = async () => {\n    try {\n      await api.post('/auth/logout');\n    } catch (error) {\n      console.error('Logout error:', error);\n    } finally {\n      dispatch({\n        type: 'LOGOUT'\n      });\n    }\n  };\n  const updateProfile = async profileData => {\n    try {\n      const response = await api.put('/auth/me', profileData);\n      dispatch({\n        type: 'SET_USER',\n        payload: response.data.user\n      });\n      return {\n        success: true\n      };\n    } catch (error) {\n      var _error$response4, _error$response4$data;\n      return {\n        success: false,\n        error: ((_error$response4 = error.response) === null || _error$response4 === void 0 ? void 0 : (_error$response4$data = _error$response4.data) === null || _error$response4$data === void 0 ? void 0 : _error$response4$data.error) || 'Profile update failed'\n      };\n    }\n  };\n  const value = {\n    ...state,\n    login,\n    confirmEmail,\n    resendConfirmation,\n    cancelConfirmation,\n    logout,\n    updateProfile\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 260,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthProvider, \"bgCdjuTOmPdSBRwTap80EFd9Y3U=\");\n_c = AuthProvider;\nexport const useAuth = () => {\n  _s2();\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n_s2(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport default AuthContext;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useReducer","useEffect","api","jsxDEV","_jsxDEV","AuthContext","initialState","user","token","isLoading","isAuthenticated","pendingConfirmation","authReducer","state","action","type","payload","window","localStorage","setItem","removeItem","AuthProvider","children","_s","dispatch","checkAuth","getItem","response","get","data","error","console","login","credentials","post","requiresConfirmation","userId","email","message","success","_error$response","_error$response$data","confirmEmail","confirmationCode","_error$response2","_error$response2$data","resendConfirmation","_error$response3","_error$response3$data","cancelConfirmation","logout","updateProfile","profileData","put","_error$response4","_error$response4$data","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s2","context","Error","$RefreshReg$"],"sources":["C:/Users/simko/Downloads/ZpRopim4/ZpetnaVazbaFinal/client/src/contexts/AuthContext.js"],"sourcesContent":["import React, { createContext, useContext, useReducer, useEffect } from 'react';\r\nimport api from '../services/api';\r\n\r\nconst AuthContext = createContext();\r\n\r\nconst initialState = {\r\n  user: null,\r\n  token: null,\r\n  isLoading: true,\r\n  isAuthenticated: false,\r\n  pendingConfirmation: null // New state for pending email confirmation\r\n};\r\n\r\nconst authReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case 'LOGIN_START':\r\n      return {\r\n        ...state,\r\n        isLoading: true\r\n      };\r\n    case 'LOGIN_REQUIRES_CONFIRMATION':\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        pendingConfirmation: action.payload\r\n      };\r\n    case 'LOGIN_SUCCESS':\r\n      if (typeof window !== 'undefined') {\r\n        localStorage.setItem('token', action.payload.token);\r\n      }\r\n      return {\r\n        ...state,\r\n        user: action.payload.user,\r\n        token: action.payload.token,\r\n        isAuthenticated: true,\r\n        isLoading: false,\r\n        pendingConfirmation: null\r\n      };\r\n    case 'LOGIN_FAILURE':\r\n      if (typeof window !== 'undefined') {\r\n        localStorage.removeItem('token');\r\n      }\r\n      return {\r\n        ...state,\r\n        user: null,\r\n        token: null,\r\n        isAuthenticated: false,\r\n        isLoading: false,\r\n        pendingConfirmation: null\r\n      };\r\n    case 'CONFIRMATION_START':\r\n      return {\r\n        ...state,\r\n        isLoading: true\r\n      };\r\n    case 'CONFIRMATION_SUCCESS':\r\n      if (typeof window !== 'undefined') {\r\n        localStorage.setItem('token', action.payload.token);\r\n      }\r\n      return {\r\n        ...state,\r\n        user: action.payload.user,\r\n        token: action.payload.token,\r\n        isAuthenticated: true,\r\n        isLoading: false,\r\n        pendingConfirmation: null\r\n      };\r\n    case 'CONFIRMATION_FAILURE':\r\n      return {\r\n        ...state,\r\n        isLoading: false\r\n        // Keep pendingConfirmation state so user can try again\r\n      };\r\n    case 'LOGOUT':\r\n      if (typeof window !== 'undefined') {\r\n        localStorage.removeItem('token');\r\n      }\r\n      return {\r\n        ...state,\r\n        user: null,\r\n        token: null,\r\n        isAuthenticated: false,\r\n        isLoading: false,\r\n        pendingConfirmation: null\r\n      };\r\n    case 'SET_USER':\r\n      return {\r\n        ...state,\r\n        user: action.payload,\r\n        isAuthenticated: true,\r\n        isLoading: false\r\n      };\r\n    case 'SET_LOADING':\r\n      return {\r\n        ...state,\r\n        isLoading: action.payload\r\n      };\r\n    case 'CLEAR_PENDING_CONFIRMATION':\r\n      return {\r\n        ...state,\r\n        pendingConfirmation: null\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [state, dispatch] = useReducer(authReducer, initialState);\r\n\r\n  // Check if user is authenticated on app load\r\n  useEffect(() => {\r\n    const checkAuth = async () => {\r\n      // Safely check for localStorage\r\n      if (typeof window === 'undefined') {\r\n        dispatch({ type: 'SET_LOADING', payload: false });\r\n        return;\r\n      }\r\n      \r\n      const token = localStorage.getItem('token');\r\n      \r\n      if (!token) {\r\n        dispatch({ type: 'SET_LOADING', payload: false });\r\n        return;\r\n      }\r\n\r\n      try {\r\n        const response = await api.get('/auth/me');\r\n        dispatch({ type: 'SET_USER', payload: response.data });\r\n      } catch (error) {\r\n        console.error('Auth check failed:', error);\r\n        dispatch({ type: 'LOGIN_FAILURE' });\r\n      }\r\n    };\r\n\r\n    checkAuth();\r\n  }, []);\r\n\r\n  const login = async (credentials) => {\r\n    dispatch({ type: 'LOGIN_START' });\r\n    \r\n    try {\r\n      const response = await api.post('/auth/login', credentials);\r\n      \r\n      if (response.data.requiresConfirmation) {\r\n        dispatch({ \r\n          type: 'LOGIN_REQUIRES_CONFIRMATION', \r\n          payload: {\r\n            userId: response.data.userId,\r\n            email: response.data.email,\r\n            message: response.data.message\r\n          }\r\n        });\r\n        return { success: true, requiresConfirmation: true };\r\n      } else {\r\n        dispatch({ \r\n          type: 'LOGIN_SUCCESS', \r\n          payload: {\r\n            user: response.data.user,\r\n            token: response.data.token\r\n          }\r\n        });\r\n        return { success: true };\r\n      }\r\n    } catch (error) {\r\n      dispatch({ type: 'LOGIN_FAILURE' });\r\n      return { \r\n        success: false, \r\n        error: error.response?.data?.error || 'Login failed' \r\n      };\r\n    }\r\n  };\r\n\r\n  const confirmEmail = async (confirmationCode) => {\r\n    if (!state.pendingConfirmation) {\r\n      return { success: false, error: 'No pending confirmation' };\r\n    }\r\n\r\n    dispatch({ type: 'CONFIRMATION_START' });\r\n    \r\n    try {\r\n      const response = await api.post('/auth/confirm-email', {\r\n        userId: state.pendingConfirmation.userId,\r\n        confirmationCode: confirmationCode\r\n      });\r\n      \r\n      dispatch({ \r\n        type: 'CONFIRMATION_SUCCESS', \r\n        payload: {\r\n          user: response.data.user,\r\n          token: response.data.token\r\n        }\r\n      });\r\n      return { success: true };\r\n    } catch (error) {\r\n      dispatch({ type: 'CONFIRMATION_FAILURE' });\r\n      return { \r\n        success: false, \r\n        error: error.response?.data?.error || 'Confirmation failed' \r\n      };\r\n    }\r\n  };\r\n\r\n  const resendConfirmation = async () => {\r\n    if (!state.pendingConfirmation) {\r\n      return { success: false, error: 'No pending confirmation' };\r\n    }\r\n\r\n    try {\r\n      await api.post('/auth/resend-confirmation', {\r\n        userId: state.pendingConfirmation.userId\r\n      });\r\n      return { success: true, message: 'Confirmation email sent successfully' };\r\n    } catch (error) {\r\n      return { \r\n        success: false, \r\n        error: error.response?.data?.error || 'Failed to resend confirmation email' \r\n      };\r\n    }\r\n  };\r\n\r\n  const cancelConfirmation = () => {\r\n    dispatch({ type: 'CLEAR_PENDING_CONFIRMATION' });\r\n  };\r\n\r\n  const logout = async () => {\r\n    try {\r\n      await api.post('/auth/logout');\r\n    } catch (error) {\r\n      console.error('Logout error:', error);\r\n    } finally {\r\n      dispatch({ type: 'LOGOUT' });\r\n    }\r\n  };\r\n\r\n  const updateProfile = async (profileData) => {\r\n    try {\r\n      const response = await api.put('/auth/me', profileData);\r\n      dispatch({ type: 'SET_USER', payload: response.data.user });\r\n      return { success: true };\r\n    } catch (error) {\r\n      return { \r\n        success: false, \r\n        error: error.response?.data?.error || 'Profile update failed' \r\n      };\r\n    }\r\n  };\r\n\r\n  const value = {\r\n    ...state,\r\n    login,\r\n    confirmEmail,\r\n    resendConfirmation,\r\n    cancelConfirmation,\r\n    logout,\r\n    updateProfile\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={value}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useAuth = () => {\r\n  const context = useContext(AuthContext);\r\n  if (!context) {\r\n    throw new Error('useAuth must be used within an AuthProvider');\r\n  }\r\n  return context;\r\n};\r\n\r\nexport default AuthContext; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}